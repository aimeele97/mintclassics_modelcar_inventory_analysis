-- 1. Calculate the total number of distinct product lines, the total quantity in stock, and the percentage of the total stock for each warehouse

SELECT 
    p.warehouseCode,
    w.warehouseName,
    COUNT(DISTINCT p.productLine) AS productLineQty,
    SUM(p.quantityInStock) AS numberInStocks,
    ROUND(SUM(p.quantityInStock) / 
                (SELECT SUM(quantityInStock)
                FROM products) * 100, 2) percent
FROM products p
JOIN warehouses w 
    ON w.warehouseCode = p.warehouseCode
GROUP BY warehouseCode , warehouseName;

-- 2. Identify the product lines are available in each warehouse, along with the corresponding warehouse code and name

SELECT DISTINCT w.warehouseCode, 
    w.warehouseName, 
    productLine
FROM products p
JOIN warehouses w 
    ON w.warehouseCode = p.warehouseCode
ORDER BY w.warehouseCode;

-- 3. Calculate the total items sold per warehouse

SELECT 
    w.warehouseName, SUM(quantityOrdered) AS itemsSold
FROM orderdetails o
JOIN products p 
    ON o.productCode = p.productCode
JOIN warehouses w 
    ON p.warehouseCode = w.warehouseCode
GROUP BY w.warehouseName;

-- 4. Calculate the total quantities in stock and the total quantities ordered for each product, grouped by warehouse and product line

SELECT 
    p.warehouseCode,
    p.productLine,
    p.productCode,
    SUM(p.quantityInStock) AS InStocks,
    SUM(o.quantityOrdered) AS qtyordered
FROM products p
JOIN orderdetails o 
    ON o.productCode = p.productCode
GROUP BY p.warehouseCode , p.productCode , p.productLine
ORDER BY qtyordered;

-- 5. Calculate the total quantity of products sold monthly and yearly

WITH cte AS (
    SELECT 
        MONTH(orderDate) AS mm, 
        YEAR(orderDate) AS yy, 
        SUM(od.quantityOrdered) AS totalqtyOrders
    FROM orders o 
    JOIN orderdetails od 
        ON o.orderNumber = od.orderNumber 
    GROUP BY 
        MONTH(orderDate), YEAR(orderDate)
)
SELECT 
    mm, 
    yy, 
    SUM(totalqtyOrders) OVER (PARTITION BY mm) AS qtySoldMonthly, 
    SUM(totalqtyOrders) OVER (PARTITION BY yy) AS qtySoldYearly 
FROM cte 
GROUP BY mm, yy
ORDER BY yy, mm;

-- 6. Calculate the total quantity in stock and the total quantity ordered for each warehouse

SELECT 
    w.warehouseCode,
    w.warehouseName,
    SUM(quantityInStock) AS InStocks,
    SUM(quantityOrdered) AS qtyordered
FROM products p
JOIN orderdetails o 
    ON o.productCode = p.productCode
JOIN warehouses w 
    ON w.warehouseCode = p.warehouseCode
GROUP BY w.warehouseCode , w.warehouseName;

-- 7. Calculate the total revenue generated by each product, grouped by product line

SELECT 
    p.productLine, tem.productCode, SUM(totalPrice) totalRevenue
FROM
    (SELECT 
        productCode, quantityOrdered * priceEach totalPrice
    FROM orderdetails) tem
JOIN products p 
    ON p.productCode = tem.productCode
GROUP BY tem.productCode , p.productLine
ORDER BY totalRevenue DESC;
    
-- 8. Calculate the total revenue generated by each product, grouped by product line, ordered by the lowest total revenue
    
SELECT 
    p.productLine, tem.productCode, SUM(totalPrice) totalRevenue
FROM
    (SELECT 
        productCode, quantityOrdered * priceEach totalPrice
    FROM
        orderdetails) tem
JOIN products p 
    ON p.productCode = tem.productCode
GROUP BY tem.productCode , p.productLine
ORDER BY totalRevenue ASC;
    
-- 9. CAlculate the revenue distribution by each product line

SELECT 
    p.productLine,
    SUM(totalPrice) totalRevenue,
    ROUND(SUM(totalPrice) / 
                    (SELECT SUM(quantityOrdered * priceEach) totalPrice FROM orderdetails) * 100, 2) percent
FROM
    (SELECT 
        productCode, quantityOrdered * priceEach totalPrice
    FROM
        orderdetails) tem
JOIN products p 
    ON p.productCode = tem.productCode
GROUP BY p.productLine
ORDER BY totalRevenue ASC;
    
-- 10. Calculate the number of distinct orders

SELECT 
    COUNT(DISTINCT o.orderNumber) distinctOrders
FROM
    orderdetails od
JOIN orders o 
    ON o.orderNumber = od.orderNumber
WHERE status = 'shipped';

-- 11. Calculate the shipping duration (in days) for each order, along with the associated comments, for orders that have been shipped

SELECT 
    o.orderNumber,
    DATEDIFF(shippedDate, orderDate) duration,
    comments
FROM
    orderdetails od
JOIN orders o 
    ON o.orderNumber = od.orderNumber
WHERE
    status = 'shipped'
GROUP BY o.orderNumber , DATEDIFF(shippedDate, orderDate)
ORDER BY duration DESC;

-- 12. Identify the distinct orders were shipped with a delivery duration of less than 10 days

SELECT 
    COUNT(DISTINCT orderNumber) distinctOrders
FROM
    (SELECT 
        o.orderNumber,
            DATEDIFF(shippedDate, orderDate) duration,
            comments
    FROM orderdetails od
JOIN orders o 
    ON o.orderNumber = od.orderNumber
WHERE status = 'shipped'
    AND DATEDIFF(shippedDate, orderDate) < 10
GROUP BY o.orderNumber , DATEDIFF(shippedDate, orderDate)) temp;




